<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.dao.KbUserMapper" >
  <resultMap id="BaseResultMap" type="com.xh.entity.KbUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_dept_code" property="userDeptCode" jdbcType="CHAR" />
    <result column="professional_code" property="professionalCode" jdbcType="CHAR" />
    <result column="user_password" property="userPassword" jdbcType="CHAR" />
    <result column="user_salt" property="userSalt" jdbcType="CHAR" />
    <result column="user_status" property="userStatus" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_code, user_name, user_dept_code, professional_code, user_password, user_salt, 
    user_status
  </sql>
  <!-- 根据员工编号查询员工信息 -->
  <select id="selectUserByUserCode" parameterType="string" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from kb_user where user_code = #{userCode,javaType=string}
  </select>
  
  <!-- 添加员工信息 -->
  <insert id="" parameterType="com.xh.entity.KbUser">
  	insert into kb_user(user_code, user_name, user_dept_code, professional_code, user_password, user_salt, user_status) 
  	values(#{userCode},#{userName},#{userDeptCode},#{professionalCode},#{userPassword},#{userSalt},#{userStatus})
  </insert>
  <!-- 批量添加员工信息 -->
  <insert id="batchInsertUsers" parameterType="list">
  	insert into kb_user(user_code, user_name, user_dept_code, professional_code, user_password, user_salt, user_status)
  	<foreach collection="list" item="b" separator=",">
  	values(#{b.userCode},#{b.userName},#{b.userDeptCode},#{b.professionalCode},#{b.userPassword},#{b.userSalt},#{b.userStatus})
  	</foreach> 
  </insert>
  <!-- 根据部门编码查询全部的用户 -->
  	<select id="selectUsersByUserDeptCode" parameterType="string" resultMap="BaseResultMap">
  		select <include refid="Base_Column_List" /> from kb_user where user_dept_code = #{userDeptCode}
  	</select>
  <!-- 根据部门编码查询上级部门的领导层用户 -->
  <select id="selectSuperiorUserByUserDeptCode" parameterType="string" resultMap="BaseResultMap">
  	 SELECT <include refid="Base_Column_List" /> FROM kb_user WHERE user_dept_code= (SELECT dept_parent_code FROM kb_dept WHERE  dept_code = #{userDeptCode})
  	AND professional_code =(SELECT professional_code  FROM kb_professional WHERE professional_level = 1)
  </select>
  <!-- 根据主方法编码查询部门编码 -->
  <select id="selectDeptCodeByProjectMainCode" resultType="string">
  	   SELECT user_dept_code FROM ${projectTableName} a INNER JOIN kb_user b ON a.`create_user_code` = b.user_code WHERE a.project_code = #{projectMainCode}
  </select>
</mapper>