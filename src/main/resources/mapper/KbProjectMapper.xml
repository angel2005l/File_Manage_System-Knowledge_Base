<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.dao.KbProjectMapper" >
  <resultMap id="BaseResultMap" type="com.xh.entity.KbProject" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_code" property="projectCode" jdbcType="CHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_type" property="projectType" jdbcType="CHAR" />
    <result column="project_info" property="projectInfo" jdbcType="VARCHAR" />
    <result column="project_remark" property="projectRemark" jdbcType="VARCHAR" />
    <result column="project_parent_code" property="projectParentCode" jdbcType="CHAR" />
    <result column="project_level" property="projectLevel" jdbcType="INTEGER" />
    <result column="project_status" property="projectStatus" jdbcType="VARCHAR" />
    <result column="create_user_code" property="createUserCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_code" property="updateUserCode" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List">
    id, project_code, project_name,project_type, project_info, project_remark, project_parent_code, 
    project_level, project_status, create_user_code, DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') as create_time, update_user_code, DATE_FORMAT(update_time,'%Y-%m-%d %H:%i:%s') as update_time
  </sql>
  <!-- 添加项目信息 -->
	<insert id="insertProject" parameterType="com.xh.entity.KbProject">
		insert into ${formName} (project_code,project_name,project_type,project_info,project_remark,project_parent_code,project_status,create_user_code,create_time,update_user_code) 
		values(#{kb.projectCode},#{kb.projectName},#{kb.projectType},#{kb.projectInfo},#{kb.projectRemark},#{kb.projectParentCode},#{kb.projectStatus},#{kb.createUserCode},#{kb.createTime},#{kb.updateUserCode})
	</insert>
	<!-- 查询当前项目下的所有子项目 -->
  <select id="selectSonProjectByParentCode" resultMap="BaseResultMap" parameterType="string">
  	select <include refid="Base_Column_List" /> from ${formName}
  	<if test="projectCode!='-1' "> where project_parent_code=#{projectCode}</if> 
  </select>
	<!-- 查询当前项目下的所有子项目 用户 -->
  <select id="selectSonProjectByParentCodeAndUserCode" resultMap="BaseResultMap">
  	<if test="formName!=null and formName!=''">
  	select a.project_code, a.project_name, a.project_type, a.project_info, a.project_remark, a.project_parent_code, 
    a.project_level, a.project_status, a.create_user_code, DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%s') as create_time, a.update_user_code,DATE_FORMAT(a.update_time,'%Y-%m-%d %H:%i:%s') as update_time from ${formName} a inner join kb_project_user b on a.project_code=b.project_code and b.user_code=#{userCode} and project_parent_code =#{projectCode}
    </if>
  </select>
  <resultMap type="map" id="projectUsetInfoResultMap">
 	 <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_code" property="projectCode" jdbcType="CHAR" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_type" property="projectType" jdbcType="CHAR" />
    <result column="project_info" property="projectInfo" jdbcType="VARCHAR" />
    <result column="project_remark" property="projectRemark" jdbcType="VARCHAR" />
    <result column="project_parent_code" property="projectParentCode" jdbcType="CHAR" />
    <result column="project_level" property="projectLevel" jdbcType="INTEGER" />
    <result column="project_status" property="projectStatus" jdbcType="VARCHAR" />
    <result column="create_user_code" property="createUserCode" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_code" property="updateUserCode" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  	<association property="projectPermission" javaType="string" column="{userCode =col1,projectCode =project_code}" select="com.xh.dao.KbProjectUserMapper.selectProjectPermissionByUserCode">
  	</association>
  </resultMap>
  
  <!-- 查询特定的项目信息及其权限 -->
  <select id="selectProjectWithProjectPerssionByProjectCode" resultMap="projectUsetInfoResultMap" >
  	select <include refid="Base_Column_List" />,'${userCode}' as col1 from ${projectTableName}  where project_code = #{projectCode}
  </select>
    <!-- 查询特定的项目信息 -->
  <select id="selectProjectByProjectCode" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from ${projectTableName}  where project_code = #{projectCode}
  </select>
  <!-- 查询主界面所有信息 -->
  <select id="selectAllPro" parameterType="string" resultMap="BaseResultMap">
  	select <include refid="Base_Column_List" /> from ${formName}
  </select>
    <!-- 查询上级项目下的所有的项目 -->
  <select id="selectSuperiorAllPro" resultMap="BaseResultMap" parameterType="string">
  	select <include refid="Base_Column_List" /> from ${formName} 
  	where project_parent_code = (SELECT project_parent_code from ${formName} a INNER JOIN kb_project_user b 
  	on a.project_code=b.project_code and a.project_code=#{projectCode} and b.user_code=#{userCode})
  </select>
  <!-- 查询父类的code -->
  <select id="getProjectParentCode" resultType="String" parameterType="string">
  	SELECT project_parent_code from ${formName} where project_code=#{projectCode} 
  </select>
  <!-- 根据项目编码获得项目信息 -->
	  <select id="selectProjectInfoByProjectCode" resultMap="BaseResultMap">
	  		select <include refid="Base_Column_List" /> from ${projectTableName} where project_code = #{projectCode}
	  </select>
  <!-- 根据项目编码获得项目名称 -->
  <select id="selectProjectNameByProjectCode" resultType="string">
  	select project_name from ${projectTableName} where project_code = #{projectCode}
  </select>
  <!-- 根据用户编码/项目编码 查询项目信息集合 -->
	<select id="selectProjectsByProjectCode" resultMap="BaseResultMap">
		SELECT DISTINCT a.id AS id, a.project_code AS project_code, a.project_name AS project_name, a.project_type AS project_type, a.project_info AS project_info, a.project_remark AS project_remark,
		 a.project_parent_code AS project_parent_code,a.project_level AS project_level, a.project_status AS project_status,
		  a.create_user_code AS create_user_code, DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%s') AS create_time, a.update_user_code AS update_user_code, DATE_FORMAT(a.update_time,'%Y-%m-%d %H:%i:%s') AS update_time 
		  FROM ${projectTableName} a INNER JOIN kb_project_user b ON a.`project_code` = b.`project_code` AND a.`project_parent_code`= #{projectCode}
	</select>
	<!-- 根据项目编码查询父类项目编码 -->
	<select id="selectSuperiorProjectCodeByProjectCode" resultType="string">
		select project_parent_code from ${projectTableName} where project_code = #{projectCode}
	</select>
	<!-- 根据userCode，projectCode查询项目详细 -->
	<resultMap type="map" id="projectInfoResultMap">
		<association property="projectInfo" javaType="map" column="{projectTableName = pt_name,userCode = user_code,projectCode = project_code}" select="selectProjectWithProjectPerssionByProjectCode"></association>
	</resultMap>
	<select id="selectProjectInfo" resultMap="projectInfoResultMap">
		SELECT pt_name,'${userCode}' as user_Code , '${projectCode}' as project_code FROM kb_project_table WHERE project_level=${projectLevel}
	</select>
	<resultMap type="map" id="projectInfoAndSonProjectInfosResultMap">
		<association property="projectInfo" javaType="map" column="{projectTableName = a.pt_name,userCode = user_code,projectCode = project_code}" select="selectProjectWithProjectPerssionByProjectCode"></association>
		<collection property="sonProjectInfos" column="{formName = b.pt_name,userCode = user_code,projectCode = project_code}" select="selectSonProject" ></collection>
	</resultMap>
	<select id="selectProjectAndSonProjectInfos" resultMap="projectInfoAndSonProjectInfosResultMap">
		 SELECT a.pt_name,b.pt_name,'${userCode}' as user_Code , '${projectCode}' as project_code FROM kb_project_table a LEFT JOIN kb_project_table b ON a.`project_level` +1 = b.`project_level` WHERE a.`project_level`=${projectLevel}
	</select>
  	<resultMap type="map" id="ProjectInfosResultMap">
  		<id column="id" property="id" jdbcType="INTEGER" />
   		<result column="project_code" property="projectCode" jdbcType="CHAR" />
    	<result column="project_name" property="projectName" jdbcType="VARCHAR" />
    	<result column="project_type" property="projectType" jdbcType="CHAR" />
    	<result column="project_parent_code" property="projectParentCode" jdbcType="CHAR" />
    	<result column="project_level" property="projectLevel" jdbcType="INTEGER" />
    	<result column="project_status" property="projectStatus" jdbcType="VARCHAR" />
    	<result column="create_user_code" property="createUserCode" jdbcType="VARCHAR" />
    	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    	<result column="update_user_code" property="updateUserCode" jdbcType="VARCHAR" />
    	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    	<result column="create_user_name" property="createUserName" jdbcType="VARCHAR"/>
    	<result column="update_user_name" property="updateUserName" jdbcType="VARCHAR"/>
  	</resultMap>
  	
		<!-- 查询当前项目下的所有子项目 用户 新版本 -->
 	<select id="selectSonProject" resultMap="ProjectInfosResultMap" >
  			SELECT  a.id AS id, a.project_code AS project_code, a.project_name AS project_name,a.project_type AS project_type, a.project_parent_code AS project_parent_code, 
   a.project_level AS project_level, a.project_status AS project_status, a.create_user_code AS create_user_code, DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i:%s') AS create_time, a.update_user_code AS update_user_code,
   DATE_FORMAT(a.update_time,'%Y-%m-%d %H:%i:%s') AS update_time,b.user_name AS create_user_name,c.user_name AS update_user_name
   FROM ${formName} a INNER JOIN kb_user b ON a.`create_user_code` = b.`user_code` INNER JOIN kb_user c ON a.update_user_code = c.user_code  WHERE a.project_parent_code= #{projectCode} AND a.project_status NOT IN ('canceled','locked')
  	</select>
	<!-- 更新项目状态 -->
	<update id="updateProjectStatus">
		<selectKey keyColumn="pt_name" order="BEFORE" keyProperty="pt_name" resultType="string">
			SELECT pt_name FROM kb_project_table WHERE project_level=#{projectLevel}
		</selectKey>
		update ${pt_name} a inner join kb_project_user b on a.project_code = b.project_code and b.user_code = #{userCode} <set>
			a.project_status = #{projectStatus},a.update_user_code=#{userCode}
		</set> where a.project_code=#{projectCode} and a.project_status='progress' and b.project_permission = 'write'
	</update>
	<!-- 删除项目 -->
	<update id="delProject" >
		<selectKey keyColumn="pt_name" order="BEFORE" keyProperty="pt_name" resultType="string">
			SELECT pt_name FROM kb_project_table WHERE project_level=#{projectLevel}
		</selectKey>
		update ${pt_name} set project_status = 'canceled' ,update_user_code = #{userCode} where project_code = #{projectCode} and (TIMESTAMPDIFF(MINUTE,create_time,NOW()) &lt;=30 or project_status = 'locked')
	</update>
	<!-- 锁定项目 -->
	<update id="lockProject">
		<selectKey keyColumn="pt_name" order="BEFORE" keyProperty="pt_name" resultType="string">
			SELECT pt_name FROM kb_project_table WHERE project_level=#{projectLevel}
		</selectKey>
		update ${pt_name} set project_status = 'locked' ,update_user_code = #{userCode} where project_code = #{projectCode}
	</update>
	<!-- 测试分界线 -->
</mapper>