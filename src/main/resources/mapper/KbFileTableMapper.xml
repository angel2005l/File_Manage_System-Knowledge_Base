<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.dao.KbFileTableMapper">
	<resultMap id="BaseResultMap" type="com.xh.entity.KbFileTable">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="ft_code" property="ftCode" jdbcType="CHAR" />
		<result column="ft_name" property="ftName" jdbcType="VARCHAR" />
		<result column="file_level" property="fileLevel" jdbcType="INTEGER" />
		<result column="create_user_code" property="createUserCode"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, ft_code, ft_name, file_level, create_user_code,DATE_FORMAT(create_time,'%Y-%m-%d %H:%i:%s') as create_time
	</sql>
	<!-- 判断该层级表信息是否存在 -->
	<select id="isExistFileTable" parameterType="_int" resultType="_boolean">
		select count(1) from kb_file_table where file_level =
		#{fileLevel,jdbcType=INTEGER}
	</select>

	<!-- 查询当前最大开放级数 -->
	<select id="selectFileLevelMax" resultType="_int">
		select
		max(file_level) from kb_file_table
	</select>

	<!-- 保存文件表路径 -->
	<insert id="insertFileTable" parameterType="com.xh.entity.KbFileTable">
		insert into	kb_file_table(ft_code,ft_name,file_level,create_user_code,create_time)
		select 	'${ftCode}','${ftName}',${fileLevel},'${createUserCode}','${createTime}' from
		dual where NOT EXISTS(select * from kb_file_table where file_level =#{fileLevel} )
	</insert>

		<!-- 创建文件表 -->
	<update id="createFileDataTable">
	CREATE TABLE ${fileTableName} (
  	`id`  int(11) NOT NULL AUTO_INCREMENT COMMENT 'id自增' ,
	`file_code`  char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '文件编号 F+yyyyMMddHHmmss+4随机数' ,
	`file_name`  varchar(32) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '文件名称' ,
	`file_info`  varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '文件信息' ,
	`file_type`  varchar(12) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '.png/.jpge/.cad/.doc/.docx/.xls…(统一小写)' ,
	`file_status`  varchar(9) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '删除:delete 在档：record 锁定：locked' ,
	`file_level`  int(2) NULL DEFAULT 0 COMMENT '0为根项目 用于限定开放的项目层级' ,
	`project_code`  char(19) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '项目格式 P+yyyyMMddHHmmss+4随机数' ,
	`file_event_type`  varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '文件性质(事件)调研资料：DYZL,会议资料：HYZL,公司信息资料：GSXXZL' ,
	`file_event_level`  varchar(10) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '文件级别(事件)非常重要：FCZY,重要：ZY,一般：YB' ,
	`file_research_user_code`  varchar(11) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '调研人编码' ,
	`file_research_start_time`  date NULL DEFAULT NULL COMMENT '调研时间' ,
	`create_user_code`  varchar(11) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '员工编号' ,
	`create_time`  datetime NULL DEFAULT NULL COMMENT '创建时间' ,
	`update_user_code`  varchar(11) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '更新人编码' ,
	`update_time`  timestamp NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间' ,
	PRIMARY KEY (`id`),
	INDEX `index_file_code` (`file_code`) USING BTREE ,
	INDEX `index_project_code` (`project_code`) USING BTREE 
	) ENGINE=InnoDB DEFAULT CHARSET=utf8;
	</update>

	<!-- 根据层级查询表名称 -->
	<select id="selectFileTableNameByFileLevel" parameterType="_int" resultType="string">
		select ft_name from kb_file_table where file_level = #{fileLevel} 
	</select>

	<!-- 查询文件分表是否存在 -->
	<select id="isExistFileDataTable" parameterType="string" resultType="_boolean">
		select count(1)  
        from information_schema.TABLES
        where table_name =#{tableName}
	</select>
	<!-- 删除文件表 -->
	<update id="dropFileDataTable" parameterType="string">
		drop table #{fileTableName}
	</update>
	<!-- 删除文件表映射 -->
	<delete id="deleteFileTabel" parameterType="string">
		delete from kb_file_table where ft_code = #{ftCode}
	</delete>
	
</mapper>